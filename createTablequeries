-- Create a new database
CREATE DATABASE paddy_procurement_db;

-- Switch to the newly created database
USE paddy_procurement_db;

-- create society table
CREATE TABLE society (
    societyId BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    societyName VARCHAR(100) NOT NULL,
    incharge VARCHAR(100) NOT NULL,
    phoneNumber VARCHAR(15),
    email VARCHAR(100)
);

-- Creating PPC Table
CREATE TABLE ppc (
    ppcId BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ppcName VARCHAR(100) NOT NULL,
    societyId BIGINT NULL, -- Foreign key referencing society table
    mandal VARCHAR(100) NOT NULL,
    incharge VARCHAR(100) NOT NULL,
    phoneNumber VARCHAR(15),
    activeStatus BOOLEAN NOT NULL DEFAULT TRUE,
    FOREIGN KEY (societyId) REFERENCES society(societyId) ON DELETE SET NULL -- Change to ON DELETE SET NULL if preferred
);

-- Creating users table
CREATE TABLE users (
    userId BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('admin', 'admin_view', 'society_view', 'ppc_user') NOT NULL,
    ppcId BIGINT, -- Link to PPC Table (for PPC users)
    societyId BIGINT, -- Link to Society Table (for society viewers)
    FOREIGN KEY (ppcId) REFERENCES ppc(ppcId) ON DELETE SET NULL,
    FOREIGN KEY (societyId) REFERENCES society(societyId) ON DELETE SET NULL
);

CREATE TABLE paddy_purchase (
    id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ppcId BIGINT NULL,  -- Foreign key to PPC table
    purchaseDate DATE NOT NULL,
    newGunniesReceived BIGINT NULL,
    oldGunniesReceived BIGINT NULL,
    gradeAFarmers BIGINT NULL,
    gradeANewBags BIGINT NULL,
    gradeAOldBags BIGINT NULL,
    gradeCFarmers BIGINT NULL,
    gradeCNewBags BIGINT NULL,
    gradeCOldBags BIGINT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ppcId) REFERENCES ppc(ppcId)
);

CREATE TABLE rice_mill (
    millId BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    millName VARCHAR(100) NOT NULL,
    inchargeName VARCHAR(100) NOT NULL,
    phoneNumber VARCHAR(15) NULL
);

CREATE TABLE trucksheet_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    paddy_purchase_id INT NOT NULL,  -- Foreign key to paddy_purchase table
    ppc_id INT NOT NULL,  -- Foreign key to PPC table
    trucksheet_number VARCHAR(50) NOT NULL,
    mill_id INT,  -- Foreign key to the rice_mill table
    grade ENUM('A', 'C') NOT NULL,  -- Grade of the paddy
    farmers_count INT NOT NULL,  -- Number of farmers involved in this trucksheet
    new_bags_used INT NOT NULL,  -- New bags used for storing paddy
    old_bags_used INT NOT NULL,  -- Old bags used for storing paddy
    is_validated BOOLEAN DEFAULT FALSE,  -- Whether the trucksheet has been validated
    amount_paddy DECIMAL(10,2) NOT NULL,  -- Amount of paddy loaded into the trucksheet
    validated_amount DECIMAL(10,2) DEFAULT 0,  -- Amount of paddy validated by the rice mill
    tab_entry_done BOOLEAN DEFAULT FALSE,  -- Whether tab entry is done for this trucksheet
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (paddy_purchase_id) REFERENCES paddy_purchase(id),
    FOREIGN KEY (ppc_id) REFERENCES ppc(ppcId),
    FOREIGN KEY (mill_id) REFERENCES rice_mill(mill_id) ON DELETE SET NULL
);